// Mocks generated by Mockito 5.4.4 from annotations
// in my_portfolio_web/test/app/controllers/contact_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:my_portfolio_web/app/data/models/tech_stack_item.dart' as _i3;
import 'package:my_portfolio_web/app/data/repositories/portfolio_repository_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PortfolioRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioRepositoryInterface extends _i1.Mock
    implements _i2.PortfolioRepositoryInterface {
  MockPortfolioRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.TechStackItem> getTechStack() => (super.noSuchMethod(
        Invocation.method(
          #getTechStack,
          [],
        ),
        returnValue: <_i3.TechStackItem>[],
      ) as List<_i3.TechStackItem>);

  @override
  Map<String, Map<String, dynamic>> getSocialLinks() => (super.noSuchMethod(
        Invocation.method(
          #getSocialLinks,
          [],
        ),
        returnValue: <String, Map<String, dynamic>>{},
      ) as Map<String, Map<String, dynamic>>);

  @override
  List<String> getAnimatedGreetings() => (super.noSuchMethod(
        Invocation.method(
          #getAnimatedGreetings,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> getAnimatedIntroductions() => (super.noSuchMethod(
        Invocation.method(
          #getAnimatedIntroductions,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> getDesignPhilosophyQuotes() => (super.noSuchMethod(
        Invocation.method(
          #getDesignPhilosophyQuotes,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<Map<String, dynamic>> getSkillCategories() => (super.noSuchMethod(
        Invocation.method(
          #getSkillCategories,
          [],
        ),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  List<Map<String, String>> getProjects() => (super.noSuchMethod(
        Invocation.method(
          #getProjects,
          [],
        ),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  List<Map<String, String>> getCareerTimeline() => (super.noSuchMethod(
        Invocation.method(
          #getCareerTimeline,
          [],
        ),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  Map<String, String> getContactInfo() => (super.noSuchMethod(
        Invocation.method(
          #getContactInfo,
          [],
        ),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  List<Map<String, String>> getEducationInfo() => (super.noSuchMethod(
        Invocation.method(
          #getEducationInfo,
          [],
        ),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  String getProfessionalSummary() => (super.noSuchMethod(
        Invocation.method(
          #getProfessionalSummary,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getProfessionalSummary,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
